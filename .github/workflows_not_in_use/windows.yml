name: Windows
env:
  cache-version: v2
on: [push]

jobs:
  test-with-tex-live:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]
        python-version: [3.6]

    steps:
    - uses: actions/checkout@v1
    - name: Set up PATH
      run: |
        echo "##[add-path]C:\strawberry\c\bin;C:\strawberry\perl\site\bin;C:\strawberry\perl\bin"
        echo "##[add-path]D:\texlive\bin\win32"

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python dependencies
      run: |

        # upgrade pip and install flake8 and pytest for linting and testing
        python -m pip install --upgrade pip
        pip install flake8 pytest

    - name: Cache TeX Live
      id: cache-texlive
      uses: actions/cache@v1
      with:
        path: D:\texlive
        key: ${{ env.cache-version }}-${{ runner.os }}-texlive-essential
        restore-keys: |
          ${{ env.cache-version }}-${{ runner.os }}-texlive-essential

    - name: Download TeX Live installer (install-tl.zip)
      run: |
        curl -s -O -L http://mirror.ctan.org/systems/texlive/tlnet/install-tl.zip
        unzip -q install-tl.zip
        mv install-tl-2* install-tl-dir
      if: steps.cache-texlive.outputs.cache-hit != 'true'

    - name: Run TeX Live installer (install-tl-windows.bat)
      run: |
        install-tl-dir\install-tl-windows.bat --profile .github\profiles\texlive_windows.profile
      if: steps.cache-texlive.outputs.cache-hit != 'true'
      shell: cmd

    - name: Install TeX packages (tlmgr)
      run: |
        tlmgr install latex-bin platex uplatex tex xetex
        tlmgr install amsmath graphics tools import subfiles latexmk
      if: steps.cache-texlive.outputs.cache-hit != 'true'

    - name: Check if pdflatex works
      run: |
        pdflatex --version

    - name: Lint with flake8
      run: |

        # check for syntax errors
        python -m flake8 --config setup.cfg --select=E9,F63,F7,F82 --show-source

        # check for give warnings (--exit-zero to not treat as errors)
        python -m flake8 --config setup.cfg --exit-zero

    - name: Test with pytest
      run: |

        # run tests
        python -m pytest --verbose
